"0","# Takes a movie dataframe, distributors list, and year, then returns the "
"0","# total worldwide box office gross of each distributor in that year"
"0","annual_box_office = function(movie_df, distributors, year) {"
"0","  annual_sales = NULL"
"0","  for (i in 1:length(distributors)) {"
"0","    distributor_movies = movie_df[movie_df$Distributor == distributors[i] & movie_df$Release.Year == year, ]"
"0","    sales_sum = sum(distributor_movies$World.Sales, na.rm = TRUE)"
"0","    annual_sales[i] = sales_sum"
"0","  }"
"0","  return(annual_sales)"
"0","}"
"0",""
"0","# Calculate total sales per studio per year"
"0","n = 90"
"0","major_distributors = names(table(Movies$Distributor)[table(Movies$Distributor) > n])"
"0","major_distributors_df = Movies[which(Movies$Distributor %in% major_distributors), ]"
"0","distributors_total_annual_sales = data.frame(Distributor = character(), Year = integer(), Total.Sales = numeric())"
"0","years = 2010:2020"
"0",""
"0","for (year in years) {"
"0","  annual_sales = annual_box_office(major_distributors_df, major_distributors, year)"
"0","  temp_df = data.frame("
"0","    Distributor = major_distributors,"
"0","    Year = rep(year, length(major_distributors)),"
"0","    Total.Sales = annual_sales"
"0","  )"
"0","  distributors_total_annual_sales = rbind(distributors_total_annual_sales, temp_df)"
"0","}"
"0",""
"0","# Interactive graph of Total Annual Box Office Sales by Distributor"
"0","p = ggplot(distributors_total_annual_sales[distributors_total_annual_sales$Year < 2020, ], aes(x = Year, y = Total.Sales, color = Distributor, shape = Distributor)) + "
"0","  geom_point(aes(text = paste0(""Year: "", Year, "
"0","                              ""<br>Total Sales: $"", comma(Total.Sales),"
"0","                              ""<br>Distributor: "", Distributor))) +"
"0","  geom_line() +"
"0","  labs(title = ""Total Annual Box Office Sales by Distributor"", "
"0","       x = ""Year"", "
"0","       y = ""Total Sales ($)"") +"
"0","  scale_x_continuous(breaks = c(2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019)) +"
"0","  scale_y_continuous(labels = comma) +"
"0","  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +"
"0","  scale_color_manual(values = cvi_palettes(""palette"", 10, type = ""discrete""))"
"2","Warning: [38;5;232mIgnoring unknown aesthetics: [32mtext[38;5;232m[39m"
"0","ggplotly(p, tooltip = ""text"") %>%"
"0","  layout(width = 900, height = 400)"
"2","Warning: Specifying width/height in layout() is now deprecated.
Please specify in ggplotly() or plot_ly()"
